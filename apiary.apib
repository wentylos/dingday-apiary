FORMAT: 1A
HOST: https://api.dingday.cc

# DingDay API

Api urcene pro pristup ke sluzbam aplikace [dinday.cc](http://www.dingday.cc)

## Intro

Vetsina requestu na zdroje vyzaduje Basic HTTP Authentication, kazdy takovy je oznacen hlavickou "Authentication".

### <a name="autorizace"></a> Autorizace

U kazdeho requestu, ktery vyzaduje autorizaci pouzivejte [Base64](http://en.wikipedia.org/wiki/Base64) zakodovany string ve forme _"username:password"_. 
Neni tedy nutne se nijak hlasit, nepracujeme s autorizacnimi tokeny. Kazdy request se autorizuje zvlast.

#### Testovani

Pro ucely testovani a tohoto MOCu pouzivejte jako Autorization string 'QWxhZGRpbjpvcGVuIHNlc2FtZQ=='. S kazdym requestem je tedy treba zaslat hlavicku

    Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==


### Podporujeme tyto HTTP metody: 

    GET - ziskani dat zdroje - u seznamu podporuje since, offset, limit, search
    POST - vytvoreni noveho zaznamu zdroje
    PUT - update zdroje - vyzaduje ID
    DELETE - mazani zdroje - vyzaduje ID
    
### Monžné odpovědi serveru:

* 200 ```OK``` the request was successful (some API calls may return 201 instead).
* 201 ```Created``` - the request was successful and a resource was created.
* 204 ```No Content``` - the request was successful but there is no representation to return (i.e. the response is empty).
* 400 ```Bad Request``` - the request could not be understood or was missing required parameters.
* 401 ```Unauthorized``` - authentication failed or user doesn't have permissions for requested operation.
* 403 ```Forbidden``` - access denied.
* 404 ```Not Found``` - resource was not found.
* 405 ```Method Not Allowed``` - requested method is not supported for resource.
* 500 ```Internal Server Error``` - there were an error while processing your request on server site.

### <a name="UUID"></a> Generovani ID UUID

TODO

### <a name="timestamp"></a> Timestamp, urceni casu

TODO

### <a name="since"></a> Since, rozdilove prirustky

TODO

### <a name="colors"></a> Barvy

V mistech kde se vyskutuje parametr *color* je dostupna pouze stringova konstanta, ktera reprezentuje lidsky citelnou hodnotu barvy, jedna z hodnot nize. Kde konkretni prirazeni barvy probiha na urovni klientske aplikace. V seznamu nize jsou v zavorce uvedny doporucene HEXa kody barve. 

* BLACK - (#000000)
* GREEN - (#00FF00)
* LIGHT_GREEN - (#78AB46)
* RED - (#FF0000)

# Group Users

Zdroj pro zpristupneni informaci o uzivateli, prihlaseni, registraci, editaci profilu.

## Autorizace
TODO - jen nekde
Basic HTTP Authentication. Pro vice informaci viz kapitola [Autorizace](#autorizace)

#group Assets

<a name="assets"></a>
Asset je blok dat různého typy přičleněný buď k úkolu nebo projektu.

## Autorizace

Zdroj pro zpristupneni ukolu prihlaseneho uzivatele.

Basic HTTP Authentication. Pro vice informaci viz kapitola [Autorizace](#autorizace).

## Zavislost na tasku/projektu

Asset sam o sobe neexistuje, je zavisly na tasku nebo projektu kteremu je prirazen. 
Proto jsou vsechny manipulace s assetem prefixovany [/tasks/{taskID}/assets](#task-assets) pripadne [/projects/{projectID}/assets](#project-assets) 
a definice prislusnych zdroju najdete u tasku a projektu.

## <a name="asset-types"></a> Typy assetu

Parametru *type* kazdeho assetu nese stringovou identifikaci typu assetu. Assetum podle typu je treba na urovni klientu pridat sematnitku. Podporujeme tyto typy assetu:

+ [NOTE](#asset-type-note)
+ [REMINDER](#asset-type-reminder) 
+ [SCHEDULED_FOR](#asset-type-scheduled-for)
+ [DEADLINE](#asset-type-deadline)
+ [TODO](#asset-type-todo)
+ [ADDRESS](#asset-type-address)
+ [TAG](#asset-type-tag)
+ [PROJECT](#asset-type-project)

## Parametry asset:

Parametry uvedene zde nize maji vsechny assety.

+ id (int) : unikátní UUID ukolu - [vice o UUID](#uuid)
+ type (string) : enum - vyctovy typ, jeden z typu ukolu - [vice o typech assetu](#asset-types)
+ lastModified (timestamp) : cas posledni modifikace [vice o formatu timestamp](#timestamp) 
+ created (timestamp) : cas vytvoreni [vice o formatu timestamp](#timestamp)

Konkretni assety maji specificke parametry, viz seznam u konkretniho assetu. 
Dle typu assetu klientska aplikace vi, jake parametry jsou pro dany asset dostupne.

###  Asset NOTE
<a name="asset-type-note"></a>
Textové políčko, které mohou upravovat všichni uživatelé, kterým je úkol sdílen.

#### Parametry 
+ title (string) : nazev poznamky
+ body (string) : telo poznamky

### Asset REMINDER
<a name="asset-type-reminder"></a>
Datum [čas], kdy se má úkol připomenout.

#### Parametry 
+ date (timestamp) : datum pripomenuti [vice o formatu timestamp](#timestamp)

### Asset SCHEDULED_FOR
<a name="asset-type-scheduled-for"></a>
 Den [čas] na kdy je úkol naplánován.

#### Parametry 
+ date (timestamp) : datum naplanovani [vice o formatu timestamp](#timestamp)

### Asset DEADLINE
<a name="asset-type-deadline"></a>
Datum [čas] do kdy musí být úkol dokončen. 

#### Parametry 
+ date (timestamp) : datum dokonceni [vice o formatu timestamp](#timestamp)

### Asset TODO
<a name="asset-type-todo"></a>
Seznam položek, které musí být provedeny. 

#### Parametry 
+ title (string) : nazev seznamu
+ items (list) : [polozky](#asset-type-todo-items)

#### Parametry jedne polozky
<a name="asset-type-todo-items"></a>

+ id (int) : unikátní UUID zaznamu - [vice o UUID](#uuid)
+ title (string) : název ukolu
+ isDone (boolean) : je ukol hotovy?
+ lastModified (timestamp) : cas posledni modifikace [vice o formatu timestamp](#timestamp) 
+ created (timestamp) : cas vytvoreni [vice o formatu timestamp](#timestamp)

### Asset ADDRESS
<a name="asset-type-address"></a>
 Adresa místa. 

#### Parametry 
+ title (string) : adresa, libovolny retezec
+ gps (string) : gps souradnice dohledane pro dany nazev

### Asset TAG
<a name="asset-type-tag"></a>
Seznam tagů přidělených k úkolu. [Vice o tagech](#tags).

#### Parametry 
+ items (list) : prirazene tagy, formatu 
[viz parametry tagu](#tags)

### Asset PROJECT
<a name="asset-type-project"></a>
Projekt, ke kterému úkol náleží. [Vice o projektech](#projects).

#### Parametry 
+ project (project) : prirazeny projekt [Viz parametry projektu](#projects)

# Group Tasks
<a name="tasks"></a>
Úkol je připomínka činnosti, kterou musí uživatel provést/delegovat/odložit/smazat.

## Autorizace

Zdroj pro zpristupneni ukolu prihlaseneho uzivatele. 

Basic HTTP Authentication. Pro vice informaci viz kapitola [Autorizace](#autorizace).

## <a name="task-categories"></a> Kategorie ukolu

Parametru *category* kazdeho tasku nese stringovou identifikaci kategorii. Kategoriim je treba na urovni klientu pridat sematnitku. Podporujeme tyto kategorie:

+ INBOX
+ NEXT
+ SCHEDULED
+ WAITING_FOR
+ SUSPENDED
+ COMPLETED

## Parametry ukolu:

+ id (int) : unikátní UUID zaznamu - [vice o UUID](#uuid)
+ title (string) : název ukolu
+ categories (list) : kolekce vyctoveho typu, kategorii ve kterych je ukol zarazen - [vice o kategoriich ukolu](#task-categories)
+ assets (list) : kolekce assetu projektu - [vice o assetech](#task-assets-list)
+ isDone (boolean) : je ukol hotovy?
+ lastModified (timestamp) : cas posledni modifikace [vice o formatu timestamp](#timestamp) 
+ created (timestamp) : cas vytvoreni [vice o formatu timestamp](#timestamp)

## Task [/tasks/{id}{?withAssets}]

Jeden konkretni task a manipulace s nim. 

+ Parameters
    + id (required, string) ... UUID zaznamu ktery ma byt ziskan/updatovan
    + withAssets = `true` (optional, boolean) ... zda expandovat vsechny assety ukolu. Pokud je true, bude parametru *assets* obshovat [expandovanou kolekci assetu](#task-assets-list)
    
+ Model (application/json)

    JSON reprezentace jednoho Ukolu. 

    + Body
    
            {
                "id": 6, 
                "title": "Mesicni nakup"
                "categories": ["SCHEDULED"]
                "assets": null
                "isDone": false
                "lastModified": "2013-11-26 11:08:09"
                "created": "2013-11-26 11:08:09"
            }

### Info o ukolu [GET]

Umoznuje ziskat detailni informace o jednom ukolu

+ Request
    + Headers
    
            Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==

+ Response 200
    
    [Task][]

## Task Asset [/tasks/{taskId}/assets/{id}]

<a name="task-assets"></a>
Jeden konkretni asset daneho ukolu a manipulace s nim.

+ Parameters
    + taskId (required, string) ... UUID tasku kteremu asset patri
    + id (required, string) ... UUID zaznamu ktery ma byt ziskan/updatovan

+ Model (application/json)

    JSON reprezentace jednoho Assetu. 

    + Body
    
            {
                "id": 1 
                "type": "NOTE"
                "lastModified": "2013-11-26 11:08:09"
                "created": "2013-11-26 11:08:09"
                "title": "Kino"
                "body": "Nekde jsem videl ze bude novy James Bond, kouknot kdy bude v kine"
            }

### Info o assetu [GET]

Umoznuje ziskat detailni informace o jednom assetu

+ Request
    + Headers
    
            Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==

+ Response 200
    
    [Task Asset][]

## Task assets list [/tasks/{taskId}/assets/{?since,search,limit,offset}]

<a name="task-assets-list"></a>
Kolekce assetu daneho tasku. [Vice o assetech](assets)
    
+ Model (application/json)

    JSON reprezentace kolekce Assetu. 

    + Body
    
            [{
                "id": 1 
                "type": "NOTE"
                "lastModified": "2013-11-26 11:08:09"
                "created": "2013-11-26 11:08:09"
                "title": "Kino"
                "body": "Nekde jsem videl ze bude novy James Bond, kouknot kdy bude v kine"
            }, {
                "id": 2 
                "type": "REMINDER"
                "lastModified": "2013-11-26 11:08:09"
                "created": "2013-11-26 11:08:09"
                "date": "10-10-2014 08:00:00"
            }, {
                "id": 3 
                "type": "SCHEDULED_FOR"
                "lastModified": "2013-11-26 11:08:09"
                "created": "2013-11-26 11:08:09"
                "date": "10-12-2014 20:00:00"
            }, {
                "id": 3 
                "type": "DEADLINE"
                "lastModified": "2013-11-26 11:08:09"
                "created": "2013-11-26 11:08:09"
                "date": "10-11-2014 20:00:00"
            }, {
                "id": 4 
                "type": "TODO"
                "lastModified": "2013-11-26 11:08:09"
                "created": "2013-11-26 11:08:09"
                "title": "Co musim udelet?"
                "items": [{
                    "id": 1 
                    "title": "Zjistit o cem je film"
                    "isDone": "true"
                    "lastModified": "2013-11-26 11:08:09"
                    "created": "2013-11-26 11:08:09"
                }, {
                    "id": 2 
                    "title": "Najit kino"
                    "isDone": "false"
                    "lastModified": "2013-11-26 11:08:09"
                    "created": "2013-11-26 11:08:09"
                }, {
                    "id": 3 
                    "title": "Zjistit zda ma Zuzka cas"
                    "isDone": "false"
                    "lastModified": "2013-11-26 11:08:09"
                    "created": "2013-11-26 11:08:09"
                }, {
                    "id": 4 
                    "title": "Rezervovat listky"
                    "isDone": "false"
                    "lastModified": "2013-11-26 11:08:09"
                    "created": "2013-11-26 11:08:09"
                }]
            }, {
                "id": 5
                "type": "ADDRESS"
                "lastModified": "2013-11-26 11:08:09"
                "created": "2013-11-26 11:08:09"
                "title": "Velky spalicek Brno"
                "gps": "49.1931944°, 016.6059722°"
            }, {
                "id": 6 
                "type": "TAG"
                "lastModified": "2013-11-26 11:08:09"
                "created": "2013-11-26 11:08:09"
                "items": [{
                    "id": 1 
                    "title": "Babicka a Deda"
                    "lastModified": "2013-11-26 11:08:09"
                    "created": "2013-11-26 11:08:09"
                    "color": "BLACK"
                }, {
                    "id": 2 
                    "title": "Manzelka"
                    "lastModified": "2013-11-26 11:08:09"
                    "created": "2013-11-26 11:08:09"
                    "color": "RED"
                }]
            }, {
                "id": 7 
                "type": "PROJECT"
                "lastModified": "2013-11-26 11:08:09"
                "created": "2013-11-26 11:08:09"
                "project": {
                    "id": 1 
                    "title": "Projekt 1"
                    "lastModified": "2013-05-27 11:08:09"
                    "created": "2013-03-10 11:08:09"
                }
            }]

### Vypis vsechny assetu [GET] 

+ Parameters
    + taskId (required, string) ... UUID ukolu jehoz assety maji byt ziskany
    + since (optional, string, `2013-01-01 12:00:00`) ... timestamp ([vice o formatu timestamp](#timestamp)), vraci jen zaznamy zmenen po datu since. [Vice o fungovani since.](#since)
    + limit (optional, int, `10`) ... omezeni poctu zaznamu
    + offset (optional, int, `30`) ... ofset ve vyhledavani
    + search (optional, string, `Hledany retezec`) ... semi-fulltextove vyhledavani, u projektu hleda v *title*

+ Request
    + Headers
    
            Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==

+ Response 200
    
    [Task assets list][]


# Group Tags

<a name="tags"></a>
Zdroj pro zpristupneni tagu prihlaseneho uzivatele. Tag je listecek, popisek prirazeny k tasku pres asset typu *AssetTag*

## Autorizace
Basic HTTP Authentication. Pro vice informaci viz kapitola [Autorizace](#autorizace)

## Parametry tagu:

+ id (string) : unikátní UUID zaznamu - [vice o UUID](#uuid)
+ title (string) : název projektu
+ lastModified (timestamp) : cas posledni modifikace [vice o formatu timestamp](#timestamp) 
+ created (timestamp) : cas vytvoreni [vice o formatu timestamp](#timestamp)
+ color (string) : barva [vice o barvach](#colors)

## Tag [/tags/{id}]

Jeden konkretni tag a manipulace s nim. 
    
+ Model (application/json)

    JSON reprezentace jednoho Tagu. 

    + Body
    
            {
                "id": 3 
                "title": "Babicka a Deda"
                "lastModified": "2013-11-26 11:08:09"
                "created": "2013-11-26 11:08:09"
                "color: "BLACK"
            }

+ Parameters
    + id (required, string) ... UUID zaznamu ktery ma byt ziskan/updatovan
    
### Info o tagu [GET]

Umoznuje ziskat detailni informace o jednom tagu

+ Request
    + Headers
    
            Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==

+ Response 200
    
    [Tag][]

### Editovat tagu [PUT]

Updatuje editovat jeden tagu, editovat lze vsechny parametry tagu, krom *generovanych serverem*

+ Request
    + Headers
    
            Content-type: application/json
            Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==

    + Body
    
            {
                "title": "Upraveny nazev tagu"
            }

+ Response 200
    
    [Tag][]

### Vytvořit nový tag [POST]

Vytvori novy tag pro prihlaseneho uzivatele

+ Request
    + Headers
    
            Content-type: application/json
            Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==

    + Body
    
            { 
                "title": "Babicka a Deda" 
            }

+ Response 201 (application/json)

    [Tag][]

### Smazat tag [DELETE]

+ Request
    + Headers
    
            Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==

+ Response 204

## Tags list [/tags{?since,search,limit,offset}]

Kolekce tagu

+ Model (application/json)

    JSON reprezentace kolekce Tagu. 
    
       + Body

            [{
                "id": 1 
                "title": "Babicka a Deda"
                "lastModified": "2013-11-26 11:08:09"
                "created": "2013-11-26 11:08:09"
                "color: "BLACK"
            }, {
                "id": 2 
                "title": "Manzelka"
                "lastModified": "2013-11-26 11:08:09"
                "created": "2013-11-26 11:08:09"
                "color: "RED"
            }, {
                "id": 3 
                "title": "Milenka"
                "lastModified": "2013-11-26 11:08:09"
                "created": "2013-11-26 11:08:09"
                "color: "LIGHT_GREEN"
            }]
            
### Vypis vsechny tagy [GET] 

+ Parameters
    + since (optional, string, `2013-01-01 12:00:00`) ... timestamp ([vice o formatu timestamp](#timestamp)), vraci jen zaznamy zmenen po datu since. [Vice o fungovani since.](#since)
    + limit (optional, int, `10`) ... omezeni poctu zaznamu
    + offset (optional, int, `30`) ... ofset ve vyhledavani
    + search (optional, string, `Hledany retezec`) ... semi-fulltextove vyhledavani, u tagu hleda v *title*
 
+ Request
    + Headers
    
            Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==

+ Response 200 (application/json)

    [Tags list][]   

# Group Terms
<a name="terms"></a>
Zdroj pro zpristupneni kalendare prihlaseneho uzivatele. 

Kalendar se sklada z terminu. Termin je spojen s ukolem skrze asset typu:

+ asset __scheduled for__ a tedy s kategorií “scheduled”.
+ asset __deadline__ pro tento den
+ asset __repeat__, který zahrnuje tento den.je připomínka činnosti, kterou musí uživatel provést/delegovat/odložit/smazat.

__Zdroj je pouze ke cteni. Zapis zpusobuje prirazeni jednoho z assetu danemu ukolu.__

## Autorizace
Basic HTTP Authentication. Pro vice informaci viz kapitola [Autorizace](#autorizace)

## Parametry termu:

+ id (string) : unikátní UUID zaznamu - [vice o UUID](#uuid)
+ date (timestamp) : planovany datum cas [vice o formatu timestamp](#timestamp) 
+ tasks (array) : pole UUID tasku nebo pole kompletnich task - v zavislosti na __fullTasks__ [vice o tasku](#tasks)
+ lastModified (timestamp) : cas posledni modifikace [vice o formatu timestamp](#timestamp) 
+ created (timestamp) : cas vytvoreni [vice o formatu timestamp](#timestamp)

## Terms list [/terms/{date}/{?since,fullTasks,withAssets}]

Kolekce termu

+ Model (application/json)

    JSON reprezentace jednoho Termu. 
    
       + Body

            [{
                "id": 1 
                "date": "10-10-2014"
                "lastModified": "2013-11-26 11:08:09"
                "created": "2013-11-26 11:08:09"
                "tasks": [1, 2, 3, 4, 5]
            }, {
                "id": 2 
                "date": "10-11-2014"
                "lastModified": "2013-11-26 11:08:09"
                "created": "2013-11-26 11:08:09"
                "tasks": [6, 8]
            }, {
                "id": 3 
                "date": "10-12-2014"
                "lastModified": "2013-11-26 11:08:09"
                "created": "2013-11-26 11:08:09"
                "tasks": [7]
            }, {
                "id": 4 
                "date": "10-13-2014"
                "lastModified": "2013-11-26 11:08:09"
                "created": "2013-11-26 11:08:09"
                "tasks": [{
                    "id": 6, 
                    "title": "Mesicni nakup"
                    "categories": ["CALENDAR", "INBOX"]
                    "assets": [{
                        "id": 1 
                        "type": "NOTE"
                        "lastModified": "2013-11-26 11:08:09"
                        "created": "2013-11-26 11:08:09"
                        "title": "Kino"
                        "body": "Nekde jsem videl ze bude novy James Bond, kouknot kdy bude v kine"
                    }, {
                        "id": 3 
                        "type": "SCHEDULED_FOR"
                        "lastModified": "2013-11-26 11:08:09"
                        "created": "2013-11-26 11:08:09"
                        "date": "10-13-2014"
                    }]
                    "isDone": false
                    "lastModified": "2013-11-26 11:08:09"
                    "created": "2013-11-26 11:08:09"
                }, {
                    "id": 7, 
                    "title": "Mesicni nakup"
                    "categories": ["CALENDAR"]
                    "assets": [{
                        "id": 10 
                        "type": "SCHEDULED_FOR"
                        "lastModified": "2013-11-26 11:08:09"
                        "created": "2013-11-26 11:08:09"
                        "date": "10-13-2014"
                    }, {
                        "id": 6 
                        "type": "TAG"
                        "lastModified": "2013-11-26 11:08:09"
                        "created": "2013-11-26 11:08:09"
                        "items": [{
                            "id": 1 
                            "title": "Babicka a Deda"
                            "lastModified": "2013-11-26 11:08:09"
                            "created": "2013-11-26 11:08:09"
                            "color": "BLACK"
                        }, {
                            "id": 2 
                            "title": "Manzelka"
                            "lastModified": "2013-11-26 11:08:09"
                            "created": "2013-11-26 11:08:09"
                            "color": "RED"
                        }]
                    }]
                    "isDone": false
                    "lastModified": "2013-11-26 11:08:09"
                    "created": "2013-11-26 11:08:09"
                }]
            }] 
            
            
### Ziskani ukolu pro dany termin [GET] 

+ Parameters
    + date (required, date, `2013-01-01`)  ... date, urcuje zaznamy pro dany den
    + since (optional, string, `2013-01-01 12:00:00`) ... timestamp ([vice o formatu timestamp](#timestamp)), vraci jen zaznamy zmenen po datu since. [Vice o fungovani since.](#since).
    + fullTasks = `false` (optional, boolean, `false`) ... zda expandovat vsechny tasky. Pokud je true, bude parametr *tasks* obshovat expandovanou kolekci tasku. [Vice o tasku](#task)
    + withAssets = `true` (optional, boolean, `true`) ... zda expandovat vsechny assety ukolu. Pokud je true, bude parametr *assets* obshovat [expandovanou kolekci assetu](#task-assets-list)

+ Request
    + Headers
    
            Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==

+ Response 200 (application/json)

    [Terms list][]   

# Group Projects
<a name="projects"></a>
Zdroj pro zpristupneni projektu prihlaseneho uzivatele. Projekt umoznuje seskupovat tasky do logickych skupin. 

## Autorizace
Basic HTTP Authentication. Pro vice informaci viz kapitola [Autorizace](#autorizace)

## Parametry projektu:

+ id (string) : unikátní UUID zaznamu - [vice o UUID](#uuid)
+ title (string) : název projektu
+ lastModified (timestamp) : cas posledni modifikace [vice o formatu timestamp](#timestamp) 
+ created (timestamp) : cas vytvoreni [vice o formatu timestamp](#timestamp)


## Project [/projects/{id}]

Jeden konkretni projekt a manipulace s nim. 
    
+ Model (application/json)

    JSON reprezentace jednoho Projektu. 

    + Body
    
            {
                "id": 3 
                "title": "Projekt 3"
                "lastModified": "2013-11-26 11:08:09"
                "created": "2013-11-26 11:08:09"
            }

+ Parameters
    + id (required, string) ... UUID zaznamu ktery ma byt ziskan/updatovan
    
### Info o projektu [GET]

Umoznuje ziskat detailni informace o jednom projektu

+ Request
    + Headers
    
            Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==

+ Response 200
    
    [Project][]

### Editovat projekt [PUT]

Updatuje editovat jeden projekt, editovat lze vsechny parametry projektu, krom *generovanych serverem*

+ Request
    + Headers
    
            Content-type: application/json
            Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==

    + Body
    
            {
                "title": "Upraveny titulek"
            }

+ Response 200
    
    [Project][]

### Vytvořit nový projekt [POST]

Vytvori novy projekt pro prihlaseneho uzivatele

+ Request
    + Headers
    
            Content-type: application/json
            Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==

    + Body
    
            { 
                "title": "Projekt 3" 
            }

+ Response 201 (application/json)

    [Project][]

### Smazat projekt [DELETE]

+ Request
    + Headers
    
            Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==

+ Response 204

## Projects list [/projects{?since,search,limit,offset}]

Kolekce projektu

+ Model (application/json)

    JSON reprezentace jednoho Projektu. 
    
       + Body

            [{
                "id": 1 
                "title": "Projekt 1"
                "lastModified": "2013-05-27 11:08:09"
                "created": "2013-03-10 11:08:09"
            }, {
                "id": 2 
                "title": "Projekt 2"
                "lastModified": "2013-05-27 11:08:09"
                "created": "2013-03-15 11:08:09"
            }, {
                "id": 3 
                "title": "Projekt 3"
                "lastModified": "2013-03-27 11:08:09"
                "created": "2013-03-20 11:08:09"
            }]
            
### Vypis vsechny projekty [GET] 

+ Parameters
    + since (optional, string, `2013-01-01 12:00:00`) ... timestamp ([vice o formatu timestamp](#timestamp)), vraci jen zaznamy zmenen po datu since. [Vice o fungovani since.](#since)
    + limit (optional, int, `10`) ... omezeni poctu zaznamu
    + offset (optional, int, `30`) ... ofset ve vyhledavani
    + search (optional, string, `Hledany retezec`) ... semi-fulltextove vyhledavani, u projektu hleda v *title*
 
+ Request
    + Headers
    
            Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==

+ Response 200 (application/json)

    [Projects list][]   
    
