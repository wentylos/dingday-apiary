FORMAT: 1A
HOST: https://api.dingday.cc

# DingDay API

Api urcene pro pristup ke sluzbam aplikace [dinday.cc](http://www.dingday.cc)

## Intro

Vetsina requestu na zdroje vyzaduje Basic HTTP Authentication, kazdy takovy je oznacen hlavickou "Authentication".

### <a name="autorizace"></a> Autorizace

U kazdeho requestu, ktery vyzaduje autorizaci pouzivejte [Base64](http://en.wikipedia.org/wiki/Base64) zakodovany string ve forme _"username:password"_. 
Neni tedy nutne se nijak hlasit, nepracujeme s autorizacnimi tokeny. Kazdy request se autorizuje zvlast.

#### Testovani

Pro ucely testovani a tohoto MOCu pouzivejte jako Autorization string 'QWxhZGRpbjpvcGVuIHNlc2FtZQ=='. S kazdym requestem je tedy treba zaslat hlavicku

    Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==


### Podporujeme tyto HTTP metody: 

    GET - ziskani dat zdroje - u seznamu podporuje since, offset, limit, search
    POST - vytvoreni noveho zaznamu zdroje
    PUT - update zdroje - vyzaduje ID
    DELETE - mazani zdroje - vyzaduje ID
    
### Monžné odpovědi serveru:

* 200 ```OK``` the request was successful (some API calls may return 201 instead).
* 201 ```Created``` - the request was successful and a resource was created.
* 204 ```No Content``` - the request was successful but there is no representation to return (i.e. the response is empty).
* 400 ```Bad Request``` - the request could not be understood or was missing required parameters.
* 401 ```Unauthorized``` - authentication failed or user doesn't have permissions for requested operation.
* 403 ```Forbidden``` - access denied.
* 404 ```Not Found``` - resource was not found.
* 405 ```Method Not Allowed``` - requested method is not supported for resource.
* 500 ```Internal Server Error``` - there were an error while processing your request on server site.

### <a name="UUID"></a> Generovani ID UUID

TODO

### <a name="timestamp"></a> Timestamp, urceni casu

TODO

### <a name="rank"></a> Rank, poradi entit

Klíč rank označuje změnu pořadí položky v kolekci. Rank může nabívat hodnot:

+ 0 - rank je nezměněn
+ - (int) např. -5 - rank položky bude změněn o 5 nahoru, všechny položky, které editovaný záznam přeskočil, budou přečíslovany
+ + (int) např. +3 - rank položky bude změněn o 3 dolů, všechny položky, které editovaný záznam přeskočili, budou přečíslovány

TODO

### <a name="since"></a> Since, rozdilove prirustky

TODO

# Group Users

Zdroj pro zpristupneni informaci o uzivateli, prihlaseni, registraci, editaci profilu.

## Autorizace
TODO - jen nekde
Basic HTTP Authentication. Pro vice informaci viz kapitola [Autorizace](#autorizace)

#group Assets

<a name="assets"></a>
Asset je blok dat různého typy přičleněný buď k úkolu nebo projektu.

## Autorizace

Zdroj pro zpristupneni ukolu prihlaseneho uzivatele.

Basic HTTP Authentication. Pro vice informaci viz kapitola [Autorizace](#autorizace).

## Zavislost na tasku/projektu

Asset sam o sobe neexistuje, je zavisly na tasku nebo projektu kteremu je prirazen. 
Proto jsou vsechny manipulace s assetem prefixovany [/tasks/{taskID}/assets](#task-assets) pripadne [/projects/{projectID}/assets](#project-assets)

## <a name="asset-types"></a> Typy assetu

Parametru *type* kazdeho assetu nese stringovou identifikaci typu assetu. Assetum podle typu je treba na urovni klientu pridat sematnitku. Podporujeme tyto typy assetu:

+ A
+ B
+ C
+ D

## Parametry asset:

+ id (int) : unikátní UUID ukolu - [vice o UUID](#uuid)
+ type (string) : enum - vyctovy typ, jeden z typu ukolu - [vice o typech assetu](#asset-types)
+ lastModified (timestamp) : cas posledni modifikace [vice o formatu timestamp](#timestamp) 
+ created (timestamp) : cas vytvoreni [vice o formatu timestamp](#timestamp)
+ rank (int) : pořadí [vice o poradi](#rank)

# Group Tasks

Úkol je připomínka činnosti, kterou musí uživatel provést/delegovat/odložit/smazat.

## Autorizace

Zdroj pro zpristupneni ukolu prihlaseneho uzivatele. 

Basic HTTP Authentication. Pro vice informaci viz kapitola [Autorizace](#autorizace).

## <a name="task-categories"></a> Kategorie ukolu

Parametru *category* kazdeho tasku nese stringovou identifikaci kategorie. Kategoriim je treba na urovni klientu pridat sematnitku. Podporujeme tyto kategorie:

+ A
+ B
+ C
+ D

## Parametry ukolu:

+ id (int) : unikátní UUID ukolu - [vice o UUID](#uuid)
+ title (string) : název ukolu
+ category (string) : enum - vyctovy typ, jedna z kategorii ukolu - [vice o kategoriich ukolu](#task-categories)
+ assets (list) : kolekce assetu projektu - [vice o assetech](#task-assets-list)
+ isDone (boolean) : je ukol hotovy?
+ lastModified (timestamp) : cas posledni modifikace [vice o formatu timestamp](#timestamp) 
+ created (timestamp) : cas vytvoreni [vice o formatu timestamp](#timestamp)
+ rank (int) : pořadí [vice o poradi](#rank)

## Task [/tasks/{id}{?assets}]

Jeden konkretni task a manipulace s nim. 

+ Parameters
    + id (required, string) ... UUID zaznamu ktery ma byt ziskan/updatovan
    + assets (optional, boolean) ... zda expandovat vsechny assety ukolu. Pokud je true, bude parametru *assets* obshovat [expandovanou kolekci assetu](#task-assets-list)
    
+ Model (application/json)

    JSON reprezentace jednoho Ukolu. 

    + Body
    
            {
                "id": 6, 
                "title": "Mesicni nakup"
                "category": "calendar"
                "assets": null
                "isDone": false
                "lastModified": "2013-11-26 11:08:09"
                "created": "2013-11-26 11:08:09"
                "rank": 1
            }

### Info o ukolu [GET]

Umoznuje ziskat detailni informace o jednom ukolu

+ Request
    + Headers
    
            Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==

+ Response 200
    
    [Task][]

## Task Asset [/tasks/{taskId}/assets/{id}]

<a name="task-assets"></a>
Jeden konkretni asset daneho ukolu a manipulace s nim.

+ Parameters
    + taskId (required, string) ... UUID tasku kteremu asset patri
    + id (required, string) ... UUID zaznamu ktery ma byt ziskan/updatovan

+ Model (application/json)

    JSON reprezentace jednoho Assetu. 

    + Body
    
            {
                "id": 6, 
                "title": "Mesicni nakup"
                "category": "calendar"
                "assets": null
                "isDone": false
                "lastModified": "2013-11-26 11:08:09"
                "created": "2013-11-26 11:08:09"
                "rank": 1
            }

### Info o assetu [GET]

Umoznuje ziskat detailni informace o jednom assetu

+ Request
    + Headers
    
            Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==

+ Response 200
    
    [Task Asset][]

## Task assets list [/tasks/{taskId}/assets/{?since,search,limit,offset}]

<a name="task-assets-list"></a>
Kolekce assetu daneho tasku. [Vice o assetech](assets)
    
+ Model (application/json)

    JSON reprezentace jednoho Assetu. 

    + Body
    
            [{
                    "id": 6, 
                    "title": "TODO"
                    "lastModified": "2013-11-26 11:08:09"
                    "created": "2013-11-26 11:08:09"
                    "rank": 1
            }, {
                    "id": 7, 
                    "title": "TODO"
                    "lastModified": "2013-11-26 11:08:09"
                    "created": "2013-11-26 11:08:09"
                    "rank": 1
            }, {
                    "id": 8, 
                    "title": "TODO"
                    "lastModified": "2013-11-26 11:08:09"
                    "created": "2013-11-26 11:08:09"
                    "rank": 1
                }
            }

### Vypis vsechny assetu [GET] 

+ Parameters
    + taskId (required, string) ... UUID ukolu jehoz assety maji byt ziskany
    + since (optional, string, `2013-01-01 12:00:00`) ... timestamp ([vice o formatu timestamp](#timestamp)), vraci jen zaznamy zmenen po datu since. [Vice o fungovani since.](#since)
    + limit (optional, int, `10`) ... omezeni poctu zaznamu
    + offset (optional, int, `30`) ... ofset ve vyhledavani
    + search (optional, string, `Hledany retezec`) ... semi-fulltextove vyhledavani, u projektu hleda v *title*

+ Request
    + Headers
    
            Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==

+ Response 200
    
    [Task assets list][]


# Group Tags

Zdroj pro zpristupneni tagu prihlaseneho uzivatele. Tag je listecek, popisek prirazeny k tasku pres asset typu *AssetTag*

## Autorizace
Basic HTTP Authentication. Pro vice informaci viz kapitola [Autorizace](#autorizace)

# Group Terms

Zdroj pro zpristupneni kalendare prihlaseneho uzivatele. Kalendar se sklada z terminu. Termin je spojen s ukolem skrze asset typu:

+ asset “scheduled for” a tedy s kategorií “scheduled”.
+ asset “deadline” pro tento den
+ asset “repeat”, který zahrnuje tento den.je připomínka činnosti, kterou musí uživatel provést/delegovat/odložit/smazat.

## Autorizace
Basic HTTP Authentication. Pro vice informaci viz kapitola [Autorizace](#autorizace)


# Group Projects

Zdroj pro zpristupneni projektu prihlaseneho uzivatele. Projekt umoznuje seskupovat tasky do logickych skupin. 

## Autorizace
Basic HTTP Authentication. Pro vice informaci viz kapitola [Autorizace](#autorizace)

## Parametry projektu:

+ id (string) : unikátní UUID zaznamu - [vice o UUID](#uuid)
+ title (string) : název projektu
+ lastModified (timestamp) : cas posledni modifikace [vice o formatu timestamp](#timestamp) 
+ created (timestamp) : cas vytvoreni [vice o formatu timestamp](#timestamp)
+ rank (int) : pořadí [vice o poradi](#rank)

+ Parameters
    + id (required, string) ... UUID zaznamu ktery ma byt ziskan/updatovan

## Project [/projects/{id}]

Jeden konkretni projekt a manipulace s nim. 
    
+ Model (application/json)

    JSON reprezentace jednoho Projektu. 

    + Body
    
            {
                "id": 3, 
                "title": "Projekt 3"
                "lastModified": "2013-11-26 11:08:09"
                "created": "2013-11-26 11:08:09"
                "rank": 3
            }

### Info o projektu [GET]

Umoznuje ziskat detailni informace o jednom projektu

+ Request
    + Headers
    
            Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==

+ Response 200
    
    [Project][]

### Editovat projekt [PUT]

Updatuje editovat jeden projekt, editovat lze vsechny parametry projektu, krom *generovanych serverem*

+ Request
    + Headers
    
            Content-type: application/json
            Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==

    + Body
    
            {
                "title": "Upraveny titulek"
                "rank": 0
            }

+ Response 200
    
    [Project][]

### Vytvořit nový projekt [POST]

Vytvori novy projekt pro prihlaseneho uzivatele

+ Request
    + Headers
    
            Content-type: application/json
            Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==

    + Body
    
            { 
                "title": "Projekt 3" 
            }

+ Response 201 (application/json)

    [Project][]

### Smazat projekt [DELETE]

+ Request
    + Headers
    
            Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==

+ Response 204

## Projects list [/projects{?since,search,limit,offset}]

Kolekce projektu

+ Model (application/json)

    JSON reprezentace jednoho Projektu. 
    
       + Body

            [{
                "id": 1, 
                "title": "Projekt 1"
                "lastModified": "2013-05-27 11:08:09"
                "created": "2013-03-10 11:08:09"
                "rank": 1
            }, {
                "id": 2, 
                "title": "Projekt 2"
                "lastModified": "2013-05-27 11:08:09"
                "created": "2013-03-15 11:08:09"
                "rank": 2
            }, {
                "id": 3, 
                "title": "Projekt 3"
                "lastModified": "2013-03-27 11:08:09"
                "created": "2013-03-20 11:08:09"
                "rank": 3
            }]
            
### Vypis vsechny projekty [GET] 

+ Parameters
    + since (optional, string, `2013-01-01 12:00:00`) ... timestamp ([vice o formatu timestamp](#timestamp)), vraci jen zaznamy zmenen po datu since. [Vice o fungovani since.](#since)
    + limit (optional, int, `10`) ... omezeni poctu zaznamu
    + offset (optional, int, `30`) ... ofset ve vyhledavani
    + search (optional, string, `Hledany retezec`) ... semi-fulltextove vyhledavani, u projektu hleda v *title*
 
+ Request
    + Headers
    
            Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==

+ Response 200 (application/json)

    [Projects list][]   
    
